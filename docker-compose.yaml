services:
  featureflagsapi:
    container_name: featureflagsapi
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      migratedb:
        condition: service_completed_successfully 
    ports:
      - "8080:8080" 
    env_file:
      - .env
  migratedb:
    image: migrate/migrate:v4.17.1
    container_name: migratedb
    volumes:
      - ./migrations:/migrations
    entrypoint: [ "migrate", "-path", "/migrations", "-database", "pgx5://ffuser:ffpass@featureflagsdb:5432/featureflagsdb", "up" ]
    depends_on:
      featureflagsdb:
        condition: service_healthy
  featureflagsdb:
    image: postgres:15.7
    container_name: featureflagsdb
    environment:
      POSTGRES_USER: ffuser
      POSTGRES_PASSWORD: ffpass
      POSTGRES_DB: featureflagsdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ffuser -d featureflagsdb"]
      interval: 1s
      timeout: 1s
      retries: 30
  otel-collector:
    image: "otel/opentelemetry-collector:latest"
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
    ports:
      - "4317:4317"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
  jaeger:
    image: jaegertracing/all-in-one:1.41
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # GRPC Span Collector
volumes:
  pgdata:
  grafana-data: